#!/bin/sh -eux
#
# uninstall https://rancher.com/docs/k3s/latest/en/installation/uninstall/ or /usr/local/bin/k3s-uninstall.sh
KUBECONFIG=/etc/rancher/k3s/k3s.yaml

# Bugfix: mv to '/opt/bin/k3s': No such file or directory:
sudo mkdir -p /opt/bin/

# Feature: k3s. Bugfix: https://github.com/rancher/k3s/issues/389
curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="0644" INSTALL_K3S_EXEC="--flannel-backend=none --no-flannel --disable-network-policy" sh -

# Bugfix: no helm  on fresh install.
sudo snap install helm --classic

# Feature: Cilium. https://docs.cilium.io/en/v0.9/gettingstarted/k3s/ 
sudo mount bpffs -t bpf /sys/fs/bpf
helm repo add cilium https://helm.cilium.io/
helm repo update
helm template cilium cilium/cilium \
  --version=1.9.3 \
  --namespace=kube-system \
  --values=helm/cilium/install/values.yaml \
  --output-dir=./helm
k3s kubectl apply -n kube-system -f ./helm//cilium/templates/

# Bugfix: cluster going dark:
k3s kubectl wait -n kube-system --for=condition=available --timeout=300s --all deployments

# Bugfix: Command 'k3s' not found:
PATH=$PATH:/opt/bin

# Refinment: use user home host storage:
mkdir -p $HOME/downloads
sudo mkdir -p /var/k8s-gitops/
sudo ln -sf /var/k8s-gitops/downloads $HOME/downloads

# Feature: Flux2. https://fluxcd.io/
if [ ! -f "/usr/local/bin/flux" ]; then
  curl -s https://toolkit.fluxcd.io/install.sh | sudo bash
fi

# Bugfix: Prerequisites.
# ✔ kubectl >=1.18.0
# ✔ Kubernetes  >=1.16.0
# ✔ prerequisites checks passed
sudo snap install kubectl --classic
flux --kubeconfig=$KUBECONFIG check --pre 

flux --kubeconfig=$KUBECONFIG bootstrap github \
  --owner=$GITHUB_USER \
  --repository=k8s-gitops \
  --branch=main \
  --path=cluster \
  --personal

k3s kubectl wait -n flux-system --for=condition=available --timeout=60s --all deployments

k3s kubectl apply -f secrets.yaml

# Bugfix: static ip:
cat <<-EOF > /etc/netplan/01-netcfg.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eno1:
      dhcp4: no
      addresses:
      - 192.168.0.211/24
      gateway4: 192.168.0.1
      nameservers:
        addresses:
        - 192.168.0.1
EOF

sudo netplan apply

cat <<-EOF > /etc/cloud/cloud.cfg.d/99-disable-netowekr-config.cfg
network: {config: disabled}
EOF

# Refinement: aliases:
cat <<-EOF > ~/.bash_aliases
alias kubectl='k3s kubectl'
alias k='kubectl'
alias ka='kubectl apply'
alias kgp='kubectl get pods'
EOF
