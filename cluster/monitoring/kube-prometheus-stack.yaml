---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 1h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 12.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 10m

  values: # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        general: true
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverError: true
        kubeApiserverSlos: true
        kubelet: true
        kubePrometheusGeneral: true
        kubePrometheusNodeAlerting: true
        kubePrometheusNodeRecording: true
        kubernetesAbsent: true
        kubernetesApps: false # kube-state-metrics crash
        kubernetesResources: false # over committed on single node
        kubernetesStorage: true
        kubernetesSystem: false # can't scrape
        kubeScheduler: false # can't scrape
        kubeStateMetrics: true
        network: true
        node: true
        prometheus: true
        prometheusOperator: true
        time: true

    kubelet:
      enabled: true

    kubeControllerManager:
      enabled: false

    kubeScheduler:
      enabled: true

    alertmanager:
      service:
        nodePort: ""
        type: ClusterIP
      templateFiles:
        template_1.tmpl: |-
          {{ define "__alert_silence_link" -}}
              {{ .ExternalURL }}/#/silences/new?filter=%7B
              {{- range .CommonLabels.SortedPairs -}}
                  {{- if ne .Name "alertname" -}}
                      {{- .Name }}%3D"{{- .Value -}}"%2C%20
                  {{- end -}}
              {{- end -}}
              alertname%3D"{{ .CommonLabels.alertname }}"%7D
          {{- end }}

          {{ define "__alert_severity_prefix" -}}
              {{ if ne .Status "firing" -}}
              :lgtm:
              {{- else if eq .Labels.severity "critical" -}}
              :fire:
              {{- else if eq .Labels.severity "warning" -}}
              :warning:
              {{- else -}}
              :question:
              {{- end }}
          {{- end }}

          {{ define "__alert_severity_prefix_title" -}}
              {{ if ne .Status "firing" -}}
              :lgtm:
              {{- else if eq .CommonLabels.severity "critical" -}}
              :fire:
              {{- else if eq .CommonLabels.severity "warning" -}}
              :warning:
              {{- else if eq .CommonLabels.severity "info" -}}
              :information_source:
              {{- else -}}
              :question:
              {{- end }}
          {{- end }}

          {{/* First line of Slack alerts */}}
          {{ define "slack.monzo.title" -}}
              [{{ .Status | toUpper -}}
              {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
              ] {{ template "__alert_severity_prefix_title" . }} {{ .CommonLabels.alertname }}
          {{- end }}

          {{/* Color of Slack attachment (appears as line next to alert )*/}}
          {{ define "slack.monzo.color" -}}
              {{ if eq .Status "firing" -}}
                  {{ if eq .CommonLabels.severity "warning" -}}
                      warning
                  {{- else if eq .CommonLabels.severity "critical" -}}
                      danger
                  {{- else -}}
                      #439FE0
                  {{- end -}}
              {{ else -}}
              good
              {{- end }}
          {{- end }}

          {{/* Emoji to display as user icon (custom emoji supported!) */}}
          {{ define "slack.monzo.icon_emoji" }}:prometheus:{{ end }}

          {{/* The test to display in the alert */}}
          {{ define "slack.monzo.text" -}}
              {{ range .Alerts }}
                  {{- if .Annotations.message }}
                      {{ .Annotations.message }}
                  {{- end }}
                  {{- if .Annotations.description }}
                      {{ .Annotations.description }}
                  {{- end }}
              {{- end }}
          {{- end }}
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'slack-notifications'
          routes:
          # - receiver: 'null'
          #   match:
          #     alertname: Watchdog
        templates: # https://github.com/prometheus-community/helm-charts/pull/563/files
        - '/etc/alertmanager/config/*.tmpl'
        receivers:
        - name: 'null'
        - name: 'slack-notifications'
          slack_configs:
          - send_resolved: true
            channel: '#k8s-gitops'
            title: '{{ template "slack.monzo.title" . }}'
            icon_emoji: '{{ template "slack.monzo.icon_emoji" . }}'
            color: '{{ template "slack.monzo.color" . }}'
            text: '{{ template "slack.monzo.text" . }}'
            actions:
            - type: button
              text: 'Query :mag:'
              url: '{{ (index .Alerts 0).GeneratorURL }}'
            - type: button
              text: 'Silence :no_bell:'
              url: '{{ template "__alert_silence_link" . }}'
      alertmanagerSpec:
        externalUrl: 'https://alertmanager.home.jamesmoriarty.xyz/'

    grafana:
      deploymentStrategy:
        type: Recreate
      service:
        nodePort: ""
        type: ClusterIP
      additionalDataSources:
        - name: Loki
          type: loki
          url:  http://loki-stack.monitoring.svc.cluster.local:3100
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          cert-manager:
            url: https://grafana.com/api/dashboards/11001/revisions/1/download
            datasource: Prometheus
          cilium-operator:
            url: https://grafana.com/api/dashboards/10598/revisions/1/download
            datasource: Prometheus
          cilium-agent:
            url: https://grafana.com/api/dashboards/10596/revisions/1/download
            datasource: Prometheus
          flux-cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2/v0.4.2/manifests/monitoring/grafana/dashboards/cluster.json
            datasource: Prometheus
          flux-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2/v0.4.2/manifests/monitoring/grafana/dashboards/control-plane.json
            datasource: Prometheus
      extraSecretMounts:
      - name: auth-github-oauth-secret-mount
        secretName: auth-github-oauth-secret
        defaultMode: 0440
        mountPath: /etc/secrets/auth_github_oauth
        readOnly: true
      grafana.ini:
        server:
          root_url: https://grafana.home.jamesmoriarty.xyz
        users:
          viewers_can_edit: true
        auth.basic:
          disable_login_form: true
        auth.github:
          enabled: true
          allow_sign_up: true
          scopes: user:email,read:org
          auth_url: https://github.com/login/oauth/authorize
          token_url: https://github.com/login/oauth/access_token
          api_url: https://api.github.com/user
          allowed_organizations: jamesmoriartyxyz
          client_id: $__file{/etc/secrets/auth_github_oauth/client_id}
          client_secret: $__file{/etc/secrets/auth_github_oauth/client_secret}

    prometheus:
      service:
        nodePort: ""
        type: ClusterIP
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        externalUrl: 'http://prometheus.home.jamesmoriarty.xyz/'
        retention: 3d
        additionalScrapeConfigs:
        - job_name: kubernetes-services
          scrape_interval: 300s
          metrics_path: /metrics
          params:
            module: [http_2xx]
          kubernetes_sd_configs:
            - role: service
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
              action: keep
              regex: true
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: ${1}:${2}
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              target_label: kubernetes_name
              
        - job_name: kubernetes-pods
          scrape_interval: 300s
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - action: keep
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: replace
            regex: (.+)
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: kubernetes_namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: kubernetes_pod_name

  valuesFrom:
  - secretFileRef:
    kind: Secret
    name: alertmanager
