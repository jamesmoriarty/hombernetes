---
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: monitoring
spec:
  interval: 30m
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: '12.2.0'
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 1m

  values: # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        general: true
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverError: true
        kubeApiserverSlos: true
        kubelet: true
        kubePrometheusGeneral: true
        kubePrometheusNodeAlerting: true
        kubePrometheusNodeRecording: true
        kubernetesAbsent: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: false
        kubeScheduler: false
        kubeStateMetrics: true
        network: true
        node: true
        prometheus: true
        prometheusOperator: true
        time: true

    kubelet:
      enabled: false

    kubeControllerManager:
      enabled: false

    kubeScheduler:
      enabled: false

    alertmanager:
      service:
        type: LoadBalancer
      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ['job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
          receiver: 'slack-notifications'
          routes:
          - receiver: 'null'
            match:
              alertname: Watchdog
        receivers:
        - name: 'null'
        - name: 'slack-notifications'
          slack_configs:
          - channel: '#k8s-gitops'
            send_resolved: true
      alertmanagerSpec:
        externalUrl: 'http://alertmanager.home.jamesmoriarty.xyz/'

    grafana:
      service:
        type: LoadBalancer
      additionalDataSources:
        - name: Loki
          type: loki
          url:  http://loki-stack.monitoring.svc.cluster.local:3100

    prometheus:
      service:
        type: LoadBalancer
      prometheusSpec:
        externalUrl: 'http://prometheus.home.jamesmoriarty.xyz/'

  valuesFrom:
  - secretFileRef:
    kind: Secret
    name: alertmanager